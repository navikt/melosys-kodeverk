# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
# For internal NAV use see https://confluence.adeo.no/display/TEESSI/CircleCI-oppsett+MELOSYS
#

version: 2.1

# Gjenbrukbare executors
executors:
  node:
    docker:
      - image: circleci/node:latest
    working_directory: ~/melosys-kodeverk
  melosys_java:
    docker:
      # Henter inn docker-image for melosys-kodeverk-java, som kan generere melosys-internt-kodeverk
      # Bruker eksplisitt referanse, og ikke latest (siden det verken garanterer bygg som kan rekjøres, eller at det faktisk er siste versjon)
      - image: navikt/melosys-kodeverk-java:db3d289504b72e375973b269286815cc098fe6c4

jobs:
  bygge_frontend:
    executor: node
    steps:
      - checkout
      - run:
          name: Check versions and env
          command: |
            yarn --version
            node --version
            env

      # Laste ned eksisterende avhengigheter som er cachet
      - restore_cache:
          keys:
            - v1-yarn-{{ checksum "yarn.lock" }}
            # Bruker siste cache hvis vi ikke har nøyaktig treff
            - v1-yarn-

      - run: yarn install

      # Lagrer cache til neste bygg
      - save_cache:
          key: v1-yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run: yarn test
      - run: yarn build

      - run:
          name: Debugging dist directory
          command: |
            cd dist
            pwd
            ls -la
            cat ./semver.txt
      # Persisterer dist-katalogen med de genererte filene til neste jobb      
      - persist_to_workspace:
          root: ~/
          paths:
            - melosys-kodeverk
  bygge_backend:
    executor: melosys_java
    working_directory: ~/melosys-kodeverk-java
    steps:
      # Henter opp den persisterte dist-katalogen
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - v1-m2build-{{ checksum "/app.jar" }}
            - v1-m2build-
      - run:
          name: Generere kildekode for Java-kodeverk
          command: |
            set -e
            java -jar /app.jar ~/melosys-kodeverk/dist/kodemap.yml
      - run:
          name: Bygge Java-kodeverk
          command: |
            cd melosys-internt-kodeverk
            mvn clean install -B -V
      - save_cache:
          key: v1-m2build-{{ checksum "/app.jar" }}
          paths:
            - ~/.m2
      - persist_to_workspace:
          root: ~/
          paths:
            - melosys-kodeverk-java

  release_frontend:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      # Hash for SSH-nøkkel (definert i CircleCI som environment variabel) vi bruker til å sjekke inn i GitHub
      - add_ssh_keys:
          fingerprints:
            - "2a:4c:ad:ed:24:4c:d0:c4:1f:03:86:1b:c8:bd:90:c2"
      - run:
          name: Release
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

            # Fra branch
            if [[ -z "${CIRCLE_TAG}" ]]; then
              echo "Releaser branch med versjon som inkluderer CircleCI-byggnummer"
              MELOSYS_KODEVERK_VERSION=`sed 's/\s//g' ~/melosys-kodeverk/dist/semver.txt | tr -d '\n' | sed 's/:/-/g'`
              npm --no-git-tag-version version $MELOSYS_KODEVERK_VERSION --allow-same-version
              # Kommentert ut for ikke å spamme npmjs med unødvendige snapshots. Vurdere å ta inn igjen når vi får GitHub package registry 
              # npm publish --access public
            # Fra tag
            else
              npm publish --access public
            fi
      - persist_to_workspace:
          root: ~/
          paths:
            - melosys-kodeverk/dist
  release_backend:
    executor: melosys_java
    working_directory: ~/melosys-kodeverk-java/melosys-internt-kodeverk
    steps:
      # Henter opp den persisterte dist-katalogen
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - v1-m2release-{{ checksum "~/melosys-kodeverk-java/melosys-internt-kodeverk/pom.xml" }}
            # Bruker siste cache hvis vi ikke har nøyaktig treff
            - v1-m2release-
      - run:
          name: Hente Maven-avhengigheter
          command: |
            mvn dependency:resolve --settings /settings.xml
            mvn dependency:resolve-plugins --settings /settings.xml
      - save_cache:
          key: v1-m2release-{{ checksum "~/melosys-kodeverk-java/melosys-internt-kodeverk/pom.xml" }}
          paths:
            - ~/.m2
      - run:
          name: Release Java-kodeverk
          command: |
            echo $GPG_KEY_BASE64 | base64 --decode | gpg --yes --batch --import
            MELOSYS_KODEVERK_VERSION=`sed 's/\s//g' ~/melosys-kodeverk/dist/semver.txt | tr -d '\n' | sed 's/:/-/g'`
            mvn versions:set -DnewVersion=$MELOSYS_KODEVERK_VERSION
            mvn -B --settings /settings.xml deploy -Prelease -DskipTests=true
  tagge_frontend:
    executor: node
    steps:
      - attach_workspace:
          at: ~/
      # Hash for SSH-nøkkel (definert i CircleCI environment variables) som vi bruker til å sjekke inn i GitHub
      - add_ssh_keys:
          fingerprints:
            - "2a:4c:ad:ed:24:4c:d0:c4:1f:03:86:1b:c8:bd:90:c2"
      - run:
          name: Tagger og sjekker inn
          command: |
            echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
            git config --global user.email "circleci-melosys@nav.no"
            git config --global user.name "CircleCI"
            git branch --set-upstream-to=origin/$CIRCLE_BRANCH
            echo "Tagger ny patch-versjon"
            GIT_COMMIT_DESC=`git log --format=oneline -n 1 $CIRCLE_SHA1`
            npm version patch -m "%s $GIT_COMMIT_DESC [skip ci]"
            git push && git push --tags

workflows:
  version: 2.1
  bygge_og_release_branch:
    jobs:
      - bygge_frontend:
          filters:
            branches:
              ignore:
                - master
      - bygge_backend:
          requires:
            - bygge_frontend
      - godkjenne_release:
          type: approval
          requires:
            - bygge_backend
      - release_frontend:
          requires:
            - godkjenne_release
      - release_backend:
          context: Maven Central Release
          requires:
            - release_frontend
  bygge_og_tagge_master:
    jobs:
      - bygge_frontend:
          filters:
            branches:
              only:
                - master
      - bygge_backend:
          requires:
            - bygge_frontend
      - tagge_frontend:
          requires:
            - bygge_backend
  # Default er alle brancher og ingen tagger inkludert. ALLE jobber i en workflow som skal prosessere en tag må derfor
  # inkludere filters->tags for å kjøres   
  bygge_og_release_tag:
    jobs:
      - bygge_frontend:
          filters:
            tags:
              only:
                - /^v.*/
            branches:
              ignore:
                - /.*/
      - bygge_backend:
          requires:
            - bygge_frontend
          filters:
            tags:
              only:
                - /^v.*/
      - release_frontend:
          requires:
            - bygge_backend
          filters:
            tags:
              only:
                - /^v.*/
      - release_backend:
          context: Maven Central Release
          requires:
            - release_frontend
          filters:
            tags:
              only:
                - /^v.*/
