on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  packages: write
  contents: write

jobs:
  bygge_frontend:
    runs-on: ubuntu-latest
    if: github.event.head_commit.message != '[skip ci]'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22.12.0"
          cache: "yarn"
      - run: yarn install
      - run: yarn test
      - run: yarn build
      - uses: actions/upload-artifact@v4
        with:
          name: melosys-kodeverk-dist
          path: dist
      - uses: actions/upload-artifact@v4
        with:
          name: melosys-kodeverk-lib
          path: lib

  bygge_backend:
    needs: bygge_frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"
      - uses: actions/download-artifact@v4
        with:
          name: melosys-kodeverk-dist
          path: melosys-kodeverk/dist
      - name: Bygg melosys-kodeverk-java
        working-directory: melosys-kodeverk-java
        run: |
          mvn clean install
      - name: Generere kildekode for Java-kodeverk
        working-directory: melosys-kodeverk-java
        run: |
          set -e
          java -jar melosys-kodeverk-generator/target/melosys-kodeverk-generator-1.jar ../melosys-kodeverk/dist/kodemap.yml
      - name: Bygge Java-kodeverk
        working-directory: melosys-kodeverk-java/melosys-internt-kodeverk
        run: mvn clean install -B -V
      - uses: actions/upload-artifact@v4
        with:
          name: melosys-kodeverk-java
          path: melosys-kodeverk-java/melosys-internt-kodeverk

  lage_versjoner:
    needs: bygge_backend
    runs-on: ubuntu-latest
    outputs:
      frontend_versjon: ${{ steps.versjoner.outputs.frontend }}
      backend_versjon: ${{ steps.versjoner.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22.12.0"
          cache: "yarn"
      - name: Øk versjon
        if: github.ref == 'refs/heads/master'
        run: |
          git config --global user.email "actions-melosys@nav.no"
          git config --global user.name "Actions"
          COMMIT_MESSAGE=`git log -1 --pretty=%B`
          npm version patch -m "%s, $COMMIT_MESSAGE, [skip ci]"
      - name: Push versjon
        if: github.ref == 'refs/heads/master'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Hent short sha1
        if: github.ref != 'refs/heads/master'
        id: parse_commit
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - id: versjoner
        run: |
          SEMVER=$(jq -r .version package.json)
          if [ ${IS_MASTER} == true ]; then
            echo "frontend=${SEMVER}" >> $GITHUB_OUTPUT
            echo "backend=${SEMVER}" >> $GITHUB_OUTPUT
          else
            # GPR støtter ikke mutable artifacts (snapshot/beta)
            echo "frontend=${SEMVER}-beta.${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "backend=${SEMVER}-${SHORT_SHA}" >> $GITHUB_OUTPUT
          fi
        env:
          IS_MASTER: ${{ github.ref == 'refs/heads/master' }}
          PR_NUMBER: ${{ github.event.number }}
          SHORT_SHA: ${{ steps.parse_commit.outputs.short_sha }}

  release_frontend:
    needs: lage_versjoner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: melosys-kodeverk-lib
          path: lib
      - uses: actions/setup-node@v4
        with:
          node-version: "22.12.0"
          registry-url: "https://npm.pkg.github.com/"
          scope: "@navikt"
      - name: Publisere til GitHub package registry
        run: |
          # FIXME: Burde ikke være nødvendig, men registry-url og scope fra setup-node, ser ikke ut til å bli plukka opp
          npm config set registry https://npm.pkg.github.com/@navikt

          if [ ${IS_MASTER} == true ]; then
            # Setter versjon eksplisitt for å slippe å trigge på taggen fra forrige jobb
            npm --no-git-tag-version version ${FRONTEND_VERSION}
            npm publish --access public
          else
            npm --no-git-tag-version version ${FRONTEND_VERSION} --allow-same-version
            npm publish --tag beta
          fi
        env:
          IS_MASTER: ${{ github.ref == 'refs/heads/master' }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FRONTEND_VERSION: ${{ needs.lage_versjoner.outputs.frontend_versjon }}

  release_backend:
    needs: lage_versjoner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"
      - uses: actions/download-artifact@v4
        with:
          name: melosys-kodeverk-java
          path: .
      - name: Publisere til GitHub package registry
        run: |
          mvn dependency:resolve --settings settings.xml
          mvn dependency:resolve-plugins --settings settings.xml
          mvn versions:set -DnewVersion=${BACKEND_VERSION}
          mvn -B deploy -Prelease -DskipTests=true --settings settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BACKEND_VERSION: ${{ needs.lage_versjoner.outputs.backend_versjon }}
